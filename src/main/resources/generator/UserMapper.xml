<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ningxy.rqui.sys.repository.UserRepository">
  <resultMap id="BaseResultMap" type="cn.ningxy.rqui.sys.entity.User">
    <!--@mbg.generated-->
    <id column="user_id" jdbcType="INTEGER" property="id" />
    <result column="user_role_id" jdbcType="INTEGER" property="roleId" />
    <result column="user_phone" jdbcType="VARCHAR" property="phone" />
    <result column="user_user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="user_real_name" jdbcType="VARCHAR" property="realName" />
    <result column="user_gender" jdbcType="TINYINT" property="gender" />
    <result column="user_identity_number" jdbcType="VARCHAR" property="identityNumber" />
    <result column="user_type" jdbcType="TINYINT" property="type" />
    <result column="user_address" jdbcType="VARCHAR" property="address" />
    <result column="user_university" jdbcType="VARCHAR" property="university" />
    <result column="user_email" jdbcType="VARCHAR" property="email" />
    <result column="user_avatar_src" jdbcType="VARCHAR" property="avatarSrc" />
    <result column="user_birthday" jdbcType="DATE" property="birthday" />
    <result column="user_is_enabled" jdbcType="BOOLEAN" property="isEnabled" />
    <result column="user_is_locked" jdbcType="BOOLEAN" property="isLocked" />
    <result column="user_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    user.id as user_id, user.role_id as user_role_id, user.phone as user_phone, user.user_name as user_user_name, 
    user.pwd as user_pwd, user.real_name as user_real_name, user.gender as user_gender, 
    user.identity_number as user_identity_number, user.`type` as `user_type`, user.address as user_address, 
    user.university as user_university, user.email as user_email, user.avatar_src as user_avatar_src, 
    user.birthday as user_birthday, user.is_enabled as user_is_enabled, user.is_locked as user_is_locked, 
    user.create_time as user_create_time, user.update_time as user_update_time
  </sql>
  <select id="selectByExample" parameterType="cn.ningxy.rqui.sys.entity.UserExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user user
    where user.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where user.user_name = #{username,jdbcType=VARCHAR}
    limit 1
  </select>
  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where user.phone = #{phone,jdbcType=VARCHAR}
    limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ningxy.rqui.sys.entity.UserExample">
    <!--@mbg.generated-->
    delete from user user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.ningxy.rqui.sys.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user (role_id, phone, user_name, 
      pwd, real_name, gender, 
      identity_number, `type`, address, 
      university, email, avatar_src, 
      birthday, is_enabled, is_locked, 
      create_time, update_time)
    values (#{roleId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{identityNumber,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{address,jdbcType=VARCHAR}, 
      #{university,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{avatarSrc,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{isEnabled,jdbcType=BOOLEAN}, #{isLocked,jdbcType=BOOLEAN}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.ningxy.rqui.sys.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="identityNumber != null">
        identity_number,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="university != null">
        university,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="avatarSrc != null">
        avatar_src,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="isEnabled != null">
        is_enabled,
      </if>
      <if test="isLocked != null">
        is_locked,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="identityNumber != null">
        #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatarSrc != null">
        #{avatarSrc,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="isEnabled != null">
        #{isEnabled,jdbcType=BOOLEAN},
      </if>
      <if test="isLocked != null">
        #{isLocked,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ningxy.rqui.sys.entity.UserExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from user user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update user user
    <set>
      <if test="record.id != null">
        user.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        user.role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        user.phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user.user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        user.pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        user.real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        user.gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.identityNumber != null">
        user.identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        user.`type` = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.address != null">
        user.address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.university != null">
        user.university = #{record.university,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        user.email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarSrc != null">
        user.avatar_src = #{record.avatarSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        user.birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.isEnabled != null">
        user.is_enabled = #{record.isEnabled,jdbcType=BOOLEAN},
      </if>
      <if test="record.isLocked != null">
        user.is_locked = #{record.isLocked,jdbcType=BOOLEAN},
      </if>
      <if test="record.createTime != null">
        user.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        user.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update user user
    set user.id = #{record.id,jdbcType=INTEGER},
      user.role_id = #{record.roleId,jdbcType=INTEGER},
      user.phone = #{record.phone,jdbcType=VARCHAR},
      user.user_name = #{record.userName,jdbcType=VARCHAR},
      user.pwd = #{record.pwd,jdbcType=VARCHAR},
      user.real_name = #{record.realName,jdbcType=VARCHAR},
      user.gender = #{record.gender,jdbcType=TINYINT},
      user.identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      user.`type` = #{record.type,jdbcType=TINYINT},
      user.address = #{record.address,jdbcType=VARCHAR},
      user.university = #{record.university,jdbcType=VARCHAR},
      user.email = #{record.email,jdbcType=VARCHAR},
      user.avatar_src = #{record.avatarSrc,jdbcType=VARCHAR},
      user.birthday = #{record.birthday,jdbcType=DATE},
      user.is_enabled = #{record.isEnabled,jdbcType=BOOLEAN},
      user.is_locked = #{record.isLocked,jdbcType=BOOLEAN},
      user.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ningxy.rqui.sys.entity.User">
    <!--@mbg.generated-->
    update user
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="identityNumber != null">
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="university != null">
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="avatarSrc != null">
        avatar_src = #{avatarSrc,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="isEnabled != null">
        is_enabled = #{isEnabled,jdbcType=BOOLEAN},
      </if>
      <if test="isLocked != null">
        is_locked = #{isLocked,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ningxy.rqui.sys.entity.User">
    <!--@mbg.generated-->
    update user
    set role_id = #{roleId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      identity_number = #{identityNumber,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=TINYINT},
      address = #{address,jdbcType=VARCHAR},
      university = #{university,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      avatar_src = #{avatarSrc,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      is_enabled = #{isEnabled,jdbcType=BOOLEAN},
      is_locked = #{isLocked,jdbcType=BOOLEAN},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>